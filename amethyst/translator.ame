amethyst Peridot_translator{
	root= {@@fnames=[];@@init=[]} trans*:t {"obj_fn *methods[100]; void init(); enum fnums{#{@@fnames*","} };#{t*""}void init(){int i; for(i=0;i<2;i++)methods[i]=(obj_fn *)malloc(100);#{@@init*""}}"}
	
	trans = Klass[{@@cls=(@name=="Array"?1:0)} trans*]:{it.join}
        | Def[{@@fnames<<@name} {@@names=["placeholder"]} trans:body {@@init<<"methods[#{@@cls}][#{@name}]=_#{@name};"} 
                                {"obj _#{@name}(#{@args*""}){obj #{@@names.uniq*","}; #{body};}\n" }]
				| Call[trans*:args  {"methods[(#{args[0]}).class][#{@name}](#{args*","})"} ]
				| CCode[ .]
				| If[ @expr=>trans:expr @block=>trans:block {"if ((#{expr}).in){#{block};\n}" }]
        | Var[                       {@@names<<@name}  @name ]
				| Assign[@expr=>trans:expr   {@@names<<@name}  {"#{@name}=#{expr}"}]
				| Seq[ trans*:{it*";\n"}]
				| .
}
